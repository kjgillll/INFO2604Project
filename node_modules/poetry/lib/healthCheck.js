const server = require( './server' ),
  events = require('./methods/events'),
  fs = require('fs');

var hc = fs.readFileSync(__dirname+'/../healthCheck.html').toString();
var startedAt = Date.now();

module.exports.name = name => {
  hc = hc.replace(/\%SERVICE\%/g, name);
}

module.exports.service = (poetryConfig, serviceConfig) => {
  return (request, reply) => {

    var buildDate;
    try{
      buildDate = require( process.cwd() + '/.buildDate.json' );
    }catch(e){
      buildDate = serviceConfig.version;
    }

    var poang;
    try{
      poang = require( process.cwd() + '/node_modules/poetry-angular/package.json' );
      poang = poang.version;
    }catch(e){}

    var dependencies = {};
    Object.keys(poetryConfig.dependencies||{})
      .forEach(key=>dependencies[key]=poetryConfig.dependencies[key]);
    Object.keys(serviceConfig.dependencies||{})
      .forEach(key=>dependencies[key]=serviceConfig.dependencies[key]);

    reply({
      service:{
        name: serviceConfig.name,
        version: buildDate,
      },
      poetry:{
        version: poetryConfig.version,
        poang,
      },
      uptime: Date.now()-((server.info)?server.info.started:startedAt),
      isAuth: !!request.session.isAuthenticated,
      dependencies,
      knownServices: events.services,
    });
  };
}

module.exports.global = (_,reply) => reply(hc)
  .header('Content-Type', 'text/html');
